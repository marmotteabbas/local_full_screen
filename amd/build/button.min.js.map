{"version":3,"sources":["../src/button.js"],"names":["define","$","log","Templates","Ajax","Notification","SELECTORS","attachBoost","attachClean","button","CLASSES","toggle","fixed","TEMPLATES","KEYPRESSED","addButton","html","element","attachpoint","length","prepend","click","toggleFullscreen","root","document","keydown","keyDownHandler","keyup","keyUpHandler","scroll","scrollHandler","event","key","ctrlKey","altKey","window","pageYOffset","addClass","float","removeClass","bodyelement","preference","hasClass","attr","updateUserPreference","fullscreen","call","methodname","args","preferences","type","value","fail","exception","init","debug","variables","render","then"],"mappings":"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","sourcesContent":["// This file is part of the fullscreen button plugin.\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A javascript module that adds the fullscreen button to a page.\n *\n * @module     local_fullscreen/button\n * @package    local_fullscreen\n * @copyright  2018 University of Nottingham\n * @author     Neill Magill <neill.magill@nottingham.ac.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/log', 'core/templates', 'core/ajax', 'core/notification'],\n    function($, log, Templates, Ajax, Notification) {\n        var SELECTORS = {\n            /** The attachment point for Boost themes. */\n            attachBoost: '#region-main > .card-block',\n            /** The attachment point for Clean themes. */\n            attachClean: '#region-main',\n            /** The class of the fullscreen button. */\n            button: '.local-fullscreen',\n        };\n\n        var CLASSES = {\n            /** Added to the body tag to switch fullscreen mode on. */\n            toggle: 'fullscreenmode',\n            /** The button is fixed relative to it's container. */\n            fixed: 'fixed',\n            /** The button floats at the top of the browser window. */\n            'float': 'float'\n        };\n\n        var TEMPLATES = {\n            /** The name of the template that renders the fullscreen button. */\n            button: 'local_fullscreen/button'\n        };\n\n        /**\n         * Used to stop Fullscreen mode from toggling repeatedly if the keyboard combination is held down.\n         *\n         * @type Boolean\n         */\n        var KEYPRESSED = false;\n\n        /**\n         * Adds the rendered button into the page.\n         *\n         * @param {String} html\n         * @returns {undefined}\n         */\n        var addButton = function(html) {\n            var element = $(html);\n            var attachpoint = $(SELECTORS.attachBoost);\n            if (attachpoint.length === 0) {\n                // No boost selector found, fallback to the method used for clean.\n                attachpoint = $(SELECTORS.attachClean);\n            }\n            attachpoint.prepend(element);\n            // Add handlers.\n            $(SELECTORS.button).click(toggleFullscreen);\n            var root = $(document);\n            root.keydown(keyDownHandler);\n            root.keyup(keyUpHandler);\n            root.scroll(scrollHandler);\n            return;\n        };\n\n        /**\n         * Adds the full screen button to the page.\n         *\n         * @param {boolean} fullscreen Should the button will be initialised in fullscreen mode.\n         * @returns {Promise}\n         */\n        var init = function(fullscreen) {\n            log.debug('Adding fullscreen button to the page (fullscreen=' + fullscreen + ')', 'local_fullscreen/button');\n            // Get the user's fullscreen preference.\n            var variables = {\n                fullscreen: false\n            };\n            if (fullscreen == true) {\n                $('body').addClass(CLASSES.toggle);\n                variables.fullscreen = true;\n            }\n            return Templates.render(TEMPLATES.button, variables).then(addButton);\n        };\n\n        /**\n         * Toggle fullscreen mode when Ctrl+Alt+b is pressed.\n         *\n         * @param {Event} event\n         * @returns {undefined}\n         */\n        var keyDownHandler = function(event) {\n            if (KEYPRESSED === true || event.key !== 'b' || event.ctrlKey === false || event.altKey === false) {\n                return;\n            }\n            KEYPRESSED = true;\n            toggleFullscreen(event);\n        };\n\n        /**\n         * Lets us know the keyboard toggle combination has stopped.\n         *\n         * @param {Event} event\n         * @returns {undefined}\n         */\n        var keyUpHandler = function(event) {\n            if (KEYPRESSED === false || event.key !== 'b' || event.ctrlKey === false || event.altKey === false) {\n                return;\n            }\n            KEYPRESSED = false;\n        };\n\n        /**\n         * Changes the mode of the fullscreen button to either be relative to an element,\n         * or floating at the top of the page, depending on how far a user has scrolled.\n         *\n         * @returns {undefined}\n         */\n        var scrollHandler = function() {\n            if (window.pageYOffset > 205) {\n                $(SELECTORS.button).addClass(CLASSES.float);\n            } else {\n                $(SELECTORS.button).removeClass(CLASSES.float);\n            }\n        };\n\n        /**\n         * Toggles the fullscreen mode.\n         *\n         * @returns {undefined}\n         */\n        var toggleFullscreen = function() {\n            var bodyelement = $('body');\n            var button = $(SELECTORS.button);\n            var preference;\n            if (bodyelement.hasClass(CLASSES.toggle)) {\n                bodyelement.removeClass(CLASSES.toggle);\n                button.attr('aria-checked', 'false');\n                preference = false;\n            } else {\n                bodyelement.addClass(CLASSES.toggle);\n                button.attr('aria-checked', 'true');\n                preference = true;\n            }\n           updateUserPreference(preference);\n        };\n\n        /**\n         * Updates the user's fullscreen preference.\n         *\n         * @param {boolean} fullscreen\n         * @returns {Promise}\n         */\n        var updateUserPreference = function(fullscreen) {\n            var request = {\n                methodname: 'core_user_update_user_preferences',\n                args: {\n                    preferences: [\n                        {\n                            type: 'fullscreenmode',\n                            value: fullscreen\n                        }\n                    ]\n                }\n            };\n            return Ajax.call([request])[0].fail(Notification.exception);\n        };\n\n        return {\n            init: init\n        };\n    }\n);\n"],"file":"button.min.js"}